{
  "name": "code-xr",
  "displayName": "Code-XR",
  "description": "XR-powered extension for code metric visualization using BabiaXR and A-Frame",
  "version": "0.0.6",
  "icon": "resources/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/aMonteSl/CodeXR.git"
  },
  "license": "MIT",
  "publisher": "aMonteSl",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "CodeXR",
      "properties": {
        "codexr.analysisMode": {
          "type": "string",
          "default": "Static",
          "enum": ["Static", "XR"],
          "description": "Default mode for code analysis (Static or XR)"
        },
        "codexr.analysis.debounceDelay": {
          "type": "number",
          "default": 2000,
          "enum": [500, 1000, 2000, 3000, 5000],
          "enumDescriptions": [
            "Very quick (500ms)",
            "Quick (1 second)",
            "Standard (2 seconds)",
            "Relaxed (3 seconds)",
            "Extended (5 seconds)"
          ],
          "description": "Delay in milliseconds before auto-analysis is triggered after file changes"
        },
        "codexr.analysis.autoAnalysis": {
          "type": "boolean",
          "default": true,
          "description": "Automatically re-analyze files when they change"
        },
        "codexr.analysis.chartType": {
          "type": "string",
          "default": "boats",
          "enum": [
            "boats",
            "bars",
            "cyls",
            "barsmap",
            "pie",
            "donut"
          ],
          "description": "Chart type to use for code analysis visualizations"
        },
        "codexr.analysis.useLizard": {
          "type": "boolean",
          "default": true,
          "description": "Use Lizard for advanced code metrics (requires Python)"
        },
        "codexr.analysis.pythonPath": {
          "type": "string",
          "default": "python3",
          "description": "Path to Python executable"
        },
        "codexr.analysis.autoSetupPython": {
          "type": "boolean",
          "default": true,
          "description": "Automatically set up Python environment when opening a workspace"
        }
      }
    },
    "commands": [
      {
        "command": "codexr.startLocalServer",
        "title": "WebXR: Start Local Server",
        "icon": {
          "light": "resources/light/server-start.svg",
          "dark": "resources/dark/server-start.svg"
        }
      },
      {
        "command": "codexr.stopLocalServer",
        "title": "WebXR: Stop Local Server",
        "icon": {
          "light": "resources/light/server-stop.svg",
          "dark": "resources/dark/server-stop.svg"
        }
      },
      {
        "command": "codexr.startServerWithConfig",
        "title": "WebXR: Start Server with Configuration",
        "icon": {
          "light": "resources/light/run.svg",
          "dark": "resources/dark/run.svg"
        }
      },
      {
        "command": "codexr.serverOptions",
        "title": "WebXR: Server Options"
      },
      {
        "command": "codexr.serverStatusActions",
        "title": "WebXR: Active Server Actions"
      },
      {
        "command": "codexr.changeServerMode",
        "title": "WebXR: Change Server Mode",
        "icon": {
          "light": "resources/light/settings.svg",
          "dark": "resources/dark/settings.svg"
        }
      },
      {
        "command": "codexr.checkCertificates",
        "title": "WebXR: Check SSL Certificates Status",
        "icon": {
          "light": "resources/light/shield.svg",
          "dark": "resources/dark/shield.svg"
        }
      },
      {
        "command": "codexr.createVisualization",
        "title": "WebXR: Create Data Visualization",
        "icon": {
          "light": "resources/light/graph.svg",
          "dark": "resources/dark/graph.svg"
        }
      },
      {
        "command": "codexr.showTemplates",
        "title": "WebXR: Browse Templates"
      },
      {
        "command": "codexr.refreshServerView",
        "title": "WebXR: Refresh Server View",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "codexr.refreshView",
        "title": "WebXR: Refresh Explorer View",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      },
      {
        "command": "codexr.setBackgroundColor",
        "title": "WebXR: Set Background Color"
      },
      {
        "command": "codexr.setEnvironmentPreset",
        "title": "WebXR: Set Environment Preset"
      },
      {
        "command": "codexr.setGroundColor",
        "title": "WebXR: Set Ground Color"
      },
      {
        "command": "codexr.setChartPalette",
        "title": "WebXR: Set Chart Palette"
      },
      {
        "command": "codexr.stopAllServers",
        "title": "WebXR: Stop All Servers",
        "icon": {
          "light": "resources/light/stop.svg",
          "dark": "resources/dark/stop.svg"
        },
        "category": "WebXR Server"
      },
      {
        "command": "codexr.analyzeFolder",
        "title": "WebXR: Analyze JavaScript/TypeScript Folder",
        "category": "Code Analysis"
      },
      {
        "command": "codexr.showJSMetricsDetails",
        "title": "WebXR: Show JavaScript Metrics Details",
        "category": "Code Analysis"
      },
      {
        "command": "codexr.analyzeFile",
        "title": "CodeXR Analyze File: Static",
        "category": "Code Analysis",
        "icon": "$(microscope)"
      },
      {
        "command": "codexr.analyzeFile3D",
        "title": "CodeXR Analyze File: XR",
        "category": "Code Analysis",
        "icon": "$(cube)"
      },
      {
        "command": "codexr.setupPythonEnvironment",
        "title": "CodeXR: Setup Python Environment",
        "category": "Code Analysis"
      },
      {
        "command": "codexr.setAnalysisMode",
        "title": "CodeXR: Set Default Analysis Mode",
        "category": "Code Analysis"
      },
      {
        "command": "codexr.refreshTreeView",
        "title": "CodeXR: Refresh Tree View",
        "category": "CodeXR"
      },
      {
        "command": "codexr.analyzeFileFromTree",
        "title": "Analyze File",
        "category": "CodeXR"
      },
      {
        "command": "codexr.analyzeMultipleFiles3D",
        "title": "Analyze Multiple Files in XR",
        "category": "CodeXR"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codexr.refreshView",
          "when": "view == codexr.serverTreeView",
          "group": "navigation"
        },
        {
          "command": "codexr.startServerWithConfig",
          "when": "view == codexr.serverTreeView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codexr.startLocalServer",
          "when": "viewItem == servers-section",
          "group": "inline"
        },
        {
          "command": "codexr.stopLocalServer",
          "when": "viewItem == active-server",
          "group": "inline"
        },
        {
          "command": "codexr.createVisualization",
          "when": "viewItem == babiaxr-section",
          "group": "inline"
        },
        {
          "command": "codexr.stopAllServers",
          "when": "view == codexr.serverTreeView && viewItem == serverContainer",
          "group": "inline"
        },
        {
          "command": "codexr.stopAllServers",
          "when": "view == codexr.serverTreeView && viewItem == serverContainer",
          "group": "1_actions"
        }
      ],
      "editor/context": [
        {
          "command": "codexr.analyzeFile",
          "when": "resourceExtname =~ /\\.(js|jsx|ts|tsx|py|c|h|cpp|cc|cxx|cs|vue|rb)$/",
          "group": "navigation"
        },
        {
          "command": "codexr.analyzeFile3D",
          "when": "resourceExtname =~ /\\.(js|jsx|ts|tsx|py|c|h|cpp|cc|cxx|cs|vue|rb)$/",
          "group": "navigation"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == python || resourceLangId == c || resourceLangId == cpp || resourceLangId == csharp || resourceLangId == vue || resourceLangId == ruby",
          "command": "codexr.analyzeFile",
          "group": "CodeXR"
        },
        {
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == python || resourceLangId == c || resourceLangId == cpp || resourceLangId == csharp || resourceLangId == vue || resourceLangId == ruby",
          "command": "codexr.analyzeFile3D",
          "group": "CodeXR"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codexr-explorer",
          "title": "CodeXR",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "codexr-explorer": [
        {
          "id": "codexr.serverTreeView",
          "name": "CodeXR",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "keybindings": [
      {
        "command": "codexr.refreshView",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "focusedView == codexr.serverTreeView"
      },
      {
        "command": "codexr.startServerWithConfig",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "focusedView == codexr.serverTreeView"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "get-port": "^7.1.0",
    "typescript": "^5.8.3"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.21.0"
  },
  "files": [
    "out/**/*",
    "src/analysis/python/**/*.py",
    "templates/**/*",
    "media/**/*",
    "resources/**/*"
  ]
}

{
  "name": "code-xr",
  "displayName": "Code-XR",
  "description": "XR-powered extension for code metric visualization using BabiaXR and A-Frame",
  "version": "0.0.7",
  "icon": "resources/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/aMonteSl/CodeXR.git"
  },
  "license": "MIT",
  "publisher": "aMonteSl",
  "engines": {
    "vscode": "^1.98.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "title": "CodeXR",
      "properties": {
        "codexr.analysisMode": {
          "type": "string",
          "enum": ["Static", "XR"],
          "default": "XR",
          "description": "Default mode for code analysis (Static or XR)"
        },
        "codexr.analysis.debounceDelay": {
          "type": "number",
          "default": 2000,
          "minimum": 100,
          "maximum": 10000,
          "description": "Delay in milliseconds before auto-analysis is triggered after file changes"
        },
        "codexr.analysis.autoAnalysis": {
          "type": "boolean", 
          "default": true,
          "description": "Enable automatic analysis when files are saved"
        },
        "codexr.analysis.chartType": {
          "type": "string",
          "enum": ["boats", "bars", "cylinders", "pie", "donut"],
          "default": "boats",
          "description": "Default chart type for XR analysis visualizations"
        },
        "codexr.analysis.tree.maxFilesPerLanguage": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 1000,
          "description": "Maximum number of files to show per language group (0 = unlimited)"
        },
        "codexr.analysis.tree.languageSortMethod": {
          "type": "string",
          "enum": ["alphabetical", "fileCount"],
          "default": "fileCount",
          "description": "Method for sorting language groups"
        },
        "codexr.analysis.tree.languageSortDirection": {
          "type": "string",
          "enum": ["ascending", "descending"],
          "default": "descending",
          "description": "Direction for sorting language groups"
        },
        "codexr.analysis.tree.fileSortMethod": {
          "type": "string",
          "enum": ["alphabetical", "fileSize", "modificationDate", "fileExtension"],
          "default": "alphabetical",
          "description": "Method for sorting files within language groups"
        },
        "codexr.analysis.tree.fileSortDirection": {
          "type": "string",
          "enum": ["ascending", "descending"],
          "default": "ascending",
          "description": "Direction for sorting files within language groups"
        },
        "codexr.analysis.pythonPath": {
          "type": "string",
          "default": "",
          "description": "Path to Python executable (leave empty for auto-detection)"
        },
        "codexr.analysis.autoSetupPython": {
          "type": "boolean",
          "default": true,
          "description": "Automatically set up Python environment if not found"
        }
      }
    },
    "commands": [
      {
        "command": "codexr.startLocalServer",
        "title": "WebXR: Start Local Server",
        "icon": "$(play)"
      },
      {
        "command": "codexr.stopLocalServer",
        "title": "WebXR: Stop Local Server", 
        "icon": "$(stop)"
      },
      {
        "command": "codexr.startServerWithConfig",
        "title": "WebXR: Start Server with Configuration",
        "icon": "$(run)"
      },
      {
        "command": "codexr.serverOptions",
        "title": "WebXR: Server Options",
        "icon": "$(gear)"
      },
      {
        "command": "codexr.serverStatusActions",
        "title": "WebXR: Active Server Actions",
        "icon": "$(server-process)"
      },
      {
        "command": "codexr.changeServerMode",
        "title": "WebXR: Change Server Mode",
        "icon": "$(settings)"
      },
      {
        "command": "codexr.checkCertificates",
        "title": "WebXR: Check SSL Certificates Status",
        "icon": "$(shield)"
      },
      {
        "command": "codexr.stopAllServers",
        "title": "WebXR: Stop All Servers",
        "icon": "$(stop-circle)",
        "category": "WebXR Server"
      },
      {
        "command": "codexr.stopAllServersFromTree",
        "title": "WebXR: Stop All Servers from Tree",
        "icon": "$(stop-circle)",
        "category": "WebXR Server"
      },
      {
        "command": "codexr.showPortStatus",
        "title": "WebXR: Show Port Status",
        "icon": "$(ports-view-icon)",
        "category": "WebXR Server"
      },
      {
        "command": "codexr.debugServerStatus",
        "title": "WebXR: Debug Server Status",
        "icon": "$(bug)",
        "category": "WebXR Server"
      },


      {
        "command": "codexr.createVisualization",
        "title": "WebXR: Create Data Visualization",
        "icon": "$(graph)"
      },
      {
        "command": "codexr.showTemplates",
        "title": "WebXR: Browse Templates",
        "icon": "$(template)"
      },
      {
        "command": "codexr.setBackgroundColor",
        "title": "WebXR: Set Background Color",
        "icon": "$(color-mode)"
      },
      {
        "command": "codexr.setEnvironmentPreset",
        "title": "WebXR: Set Environment Preset",
        "icon": "$(globe)"
      },
      {
        "command": "codexr.setGroundColor",
        "title": "WebXR: Set Ground Color",
        "icon": "$(paintcan)"
      },
      {
        "command": "codexr.setChartPalette",
        "title": "WebXR: Set Chart Palette",
        "icon": "$(symbol-color)"
      },
      {
        "command": "codexr.launchBabiaXRExample",
        "title": "WebXR: Launch BabiaXR Example",
        "icon": "$(rocket)"
      },

      {
        "command": "codexr.analyzeFile",
        "title": "CodeXR: Analyze File (Static)",
        "category": "Code Analysis",
        "icon": "$(microscope)"
      },
      {
        "command": "codexr.analyzeFile3D",
        "title": "CodeXR: Analyze File (XR)",
        "category": "Code Analysis",
        "icon": "$(cube)"
      },
      {
        "command": "codexr.analyzeFileFromTree",
        "title": "CodeXR: Analyze File",
        "category": "Code Analysis",
        "icon": "$(search)"
      },
      {
        "command": "codexr.openAndAnalyzeFile",
        "title": "CodeXR: Open and Analyze File",
        "category": "Code Analysis",
        "icon": "$(file-code)"
      },
      {
        "command": "codexr.analyzeMultipleFiles3D",
        "title": "CodeXR: Analyze Multiple Files in XR",
        "category": "Code Analysis",
        "icon": "$(files)"
      },
      {
        "command": "codexr.analyzeFolder",
        "title": "CodeXR: Analyze JavaScript/TypeScript Folder",
        "category": "Code Analysis",
        "icon": "$(folder)"
      },
      {
        "command": "codexr.showJSMetricsDetails",
        "title": "CodeXR: Show JavaScript Metrics Details",
        "category": "Code Analysis",
        "icon": "$(info)"
      },


      {
        "command": "codexr.setAnalysisMode",
        "title": "CodeXR: Set Default Analysis Mode",
        "category": "Analysis Settings",
        "icon": "$(settings-gear)"
      },
      {
        "command": "codexr.setAnalysisDebounceDelay",
        "title": "CodeXR: Set Analysis Delay",
        "category": "Analysis Settings",
        "icon": "$(clock)"
      },
      {
        "command": "codexr.toggleAutoAnalysis",
        "title": "CodeXR: Toggle Auto Analysis",
        "category": "Analysis Settings",
        "icon": "$(sync)"
      },
      {
        "command": "codexr.setAnalysisChartType",
        "title": "CodeXR: Set Chart Type",
        "category": "Analysis Settings",
        "icon": "$(graph)"
      },
      {
        "command": "codexr.setDimensionMapping",
        "title": "CodeXR: Set Dimension Mapping",
        "category": "Analysis Settings",
        "icon": "$(symbol-parameter)"
      },
      {
        "command": "codexr.resetAnalysisDefaults",
        "title": "CodeXR: Reset Analysis Defaults",
        "category": "Analysis Settings",
        "icon": "$(refresh)"
      },

      
      {
        "command": "codexr.setupPythonEnvironment",
        "title": "CodeXR: Setup Python Environment",
        "category": "Python Environment",
        "icon": "$(symbol-misc)"
      },

      {
        "command": "codexr.refreshView",
        "title": "CodeXR: Refresh Explorer View",
        "icon": "$(refresh)"
      },
      {
        "command": "codexr.refreshServerView",
        "title": "CodeXR: Refresh Server View",
        "icon": "$(refresh)"
      },
      {
        "command": "codexr.refreshTreeView",
        "title": "CodeXR: Refresh Tree View",
        "category": "CodeXR",
        "icon": "$(refresh)"
      },
      {
        "command": "codexr.refreshAnalysisTree",
        "title": "CodeXR: Refresh Analysis Tree",
        "category": "Analysis Settings",
        "icon": "$(refresh)"
      },
      {
        "command": "codexr.updateAnalysisPanel",
        "title": "CodeXR: Update Analysis Panel",
        "category": "CodeXR"
      },
      {
        "command": "codexr.debugWatchers",
        "title": "CodeXR: Debug File Watchers",
        "category": "Code Analysis",
        "icon": "$(bug)"
      },
      {
        "command": "codexr.visualizeDOM",
        "title": "CodeXR: Visualize DOM",
        "icon": "$(browser)"
      },
      {
        "command": "codexr.toggleAnalysisMode",
        "title": "Toggle Analysis Mode",
        "category": "CodeXR",
        "icon": "$(arrow-swap)"
      },
      {
        "command": "codexr.configureTreeDisplay",
        "title": "Configure Tree Display",
        "category": "CodeXR",
        "icon": "$(settings-gear)"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "codexr.refreshView",
          "when": "view == codexr.serverTreeView",
          "group": "navigation"
        },
        {
          "command": "codexr.startServerWithConfig",
          "when": "view == codexr.serverTreeView",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "codexr.startLocalServer",
          "when": "viewItem == servers-section",
          "group": "inline"
        },
        {
          "command": "codexr.stopLocalServer",
          "when": "viewItem == active-server",
          "group": "inline"
        },
        {
          "command": "codexr.serverOptions",
          "when": "viewItem == activeServer",
          "group": "inline"
        },
        {
          "command": "codexr.serverOptions",
          "when": "viewItem == activeXRAnalysisServer",
          "group": "inline"
        },
        {
          "command": "codexr.createVisualization",
          "when": "viewItem == babiaxr-section",
          "group": "inline"
        },
        {
          "command": "codexr.stopAllServers",
          "when": "view == codexr.serverTreeView && viewItem == serverContainer",
          "group": "inline"
        },
        {
          "command": "codexr.stopAllServers",
          "when": "view == codexr.serverTreeView && viewItem == serverContainer",
          "group": "1_actions"
        },
        {
          "command": "codexr.analyzeFileFromTree",
          "when": "viewItem == analysis_file",
          "group": "navigation"
        },
        {
          "command": "codexr.openAndAnalyzeFile",
          "when": "viewItem == analysis_file",
          "group": "1_actions"
        },
        {
          "command": "codexr.setAnalysisMode",
          "when": "viewItem == analysis_setting_option && resourceLangId == mode",
          "group": "inline"
        },
        {
          "command": "codexr.setAnalysisDebounceDelay",
          "when": "viewItem == analysis_setting_option && resourceLangId == delay",
          "group": "inline"
        },
        {
          "command": "codexr.toggleAutoAnalysis",
          "when": "viewItem == analysis_setting_option && resourceLangId == auto",
          "group": "inline"
        },
        {
          "command": "codexr.setAnalysisChartType",
          "when": "viewItem == analysis_setting_option && resourceLangId == chartType",
          "group": "inline"
        },
        {
          "command": "codexr.setDimensionMapping",
          "when": "viewItem == analysis_setting_option && resourceLangId == dimensionMapping",
          "group": "inline"
        },
        {
          "command": "codexr.resetAnalysisDefaults",
          "when": "viewItem == analysis_reset",
          "group": "inline"
        },
        {
          "command": "codexr.launchBabiaXRExample",
          "when": "viewItem == babiaxr_example",
          "group": "navigation"
        }
      ],
      "editor/context": [
        {
          "command": "codexr.analyzeFile",
          "when": "resourceExtname =~ /\\.(js|jsx|ts|tsx|py|c|h|cpp|cc|cxx|cs|vue|rb|java|m|mm|swift|ttcn3|ttcn|3mp|php|phtml|php3|php4|php5|phps|scala|sc|gd|go|lua|rs|f|f77|f90|f95|f03|f08|for|ftn|kt|kts|sol|erl|hrl|zig|pl|pm|pod|t)$/",
          "group": "navigation"
        },
        {
          "command": "codexr.analyzeFile3D",
          "when": "resourceExtname =~ /\\.(js|jsx|ts|tsx|py|c|h|cpp|cc|cxx|cs|vue|rb|java|m|mm|swift|ttcn3|ttcn|3mp|php|phtml|php3|php4|php5|phps|scala|sc|gd|go|lua|rs|f|f77|f90|f95|f03|f08|for|ftn|kt|kts|sol|erl|hrl|zig|pl|pm|pod|t)$/",
          "group": "navigation"
        },
        {
          "command": "codexr.visualizeDOM",
          "when": "resourceExtname == .html",
          "group": "codexr@3"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == python || resourceLangId == c || resourceLangId == cpp || resourceLangId == csharp || resourceLangId == vue || resourceLangId == ruby || resourceLangId == java || resourceLangId == objective-c || resourceLangId == objective-cpp || resourceLangId == swift || resourceLangId == ttcn3 || resourceLangId == php || resourceLangId == scala || resourceLangId == gdscript || resourceLangId == go || resourceLangId == lua || resourceLangId == rust || resourceLangId == fortran || resourceLangId == kotlin || resourceLangId == solidity || resourceLangId == erlang || resourceLangId == zig || resourceLangId == perl",
          "command": "codexr.analyzeFile",
          "group": "CodeXR"
        },
        {
          "when": "resourceLangId == javascript || resourceLangId == typescript || resourceLangId == python || resourceLangId == c || resourceLangId == cpp || resourceLangId == csharp || resourceLangId == vue || resourceLangId == ruby || resourceLangId == java || resourceLangId == objective-c || resourceLangId == objective-cpp || resourceLangId == swift || resourceLangId == ttcn3 || resourceLangId == php || resourceLangId == scala || resourceLangId == gdscript || resourceLangId == go || resourceLangId == lua || resourceLangId == rust || resourceLangId == fortran || resourceLangId == kotlin || resourceLangId == solidity || resourceLangId == erlang || resourceLangId == zig || resourceLangId == perl",
          "command": "codexr.analyzeFile3D",
          "group": "CodeXR"
        },
        {
          "command": "codexr.visualizeDOM",
          "when": "resourceExtname == .html",
          "group": "codexr@3"
        }
      ]
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codexr-explorer",
          "title": "CodeXR",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "codexr-explorer": [
        {
          "id": "codexr.serverTreeView",
          "name": "CodeXR",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "keybindings": [
      {
        "command": "codexr.refreshView",
        "key": "ctrl+shift+r",
        "mac": "cmd+shift+r",
        "when": "focusedView == codexr.serverTreeView"
      },
      {
        "command": "codexr.startServerWithConfig",
        "key": "ctrl+shift+s",
        "mac": "cmd+shift+s",
        "when": "focusedView == codexr.serverTreeView"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "dependencies": {
    "get-port": "^7.1.0",
    "typescript": "^5.8.3"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.98.0",
    "@typescript-eslint/eslint-plugin": "^8.25.0",
    "@typescript-eslint/parser": "^8.25.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.21.0"
  },
  "files": [
    "out/**/*",
    "src/analysis/python/**/*.py",
    "templates/**/*",
    "media/**/*",
    "resources/**/*"
  ]
}
